[{"D:\\mystudy\\nwitter\\src\\index.tsx":"1","D:\\mystudy\\nwitter\\src\\components\\App.tsx":"2","D:\\mystudy\\nwitter\\src\\firebase.app.ts":"3","D:\\mystudy\\nwitter\\src\\components\\Router.tsx":"4","D:\\mystudy\\nwitter\\src\\routes\\auth.tsx":"5","D:\\mystudy\\nwitter\\src\\components\\Navigation.tsx":"6","D:\\mystudy\\nwitter\\src\\routes\\home.tsx":"7","D:\\mystudy\\nwitter\\src\\routes\\profile.tsx":"8","D:\\mystudy\\nwitter\\src\\components\\Nweet.tsx":"9"},{"size":267,"mtime":1609659984653,"results":"10","hashOfConfig":"11"},{"size":1212,"mtime":1609770639279,"results":"12","hashOfConfig":"11"},{"size":729,"mtime":1609770639281,"results":"13","hashOfConfig":"11"},{"size":1425,"mtime":1609770639280,"results":"14","hashOfConfig":"11"},{"size":6762,"mtime":1609684494499,"results":"15","hashOfConfig":"11"},{"size":1389,"mtime":1609770639279,"results":"16","hashOfConfig":"11"},{"size":5134,"mtime":1609771570069,"results":"17","hashOfConfig":"11"},{"size":4689,"mtime":1609770639282,"results":"18","hashOfConfig":"11"},{"size":3791,"mtime":1609772172088,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"17qfwzs",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\mystudy\\nwitter\\src\\index.tsx",[],["44","45"],"D:\\mystudy\\nwitter\\src\\components\\App.tsx",[],"D:\\mystudy\\nwitter\\src\\firebase.app.ts",[],"D:\\mystudy\\nwitter\\src\\components\\Router.tsx",["46","47","48"],"import React, { useState } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Redirect,\r\n  Route,\r\n  Switch,\r\n} from \"react-router-dom\";\r\nimport { Auth } from \"../routes/auth\";\r\nimport { Home } from \"../routes/home\";\r\nimport firebase from \"firebase\";\r\nimport { AppNavigation } from \"./Navigation\";\r\nimport { Profile } from \"routes/profile\";\r\nimport { firebaseAuth } from \"firebase.app\";\r\nimport { IProfileText } from \"./App\";\r\n\r\ninterface IAppRouter {\r\n  isLoggedIn: Boolean;\r\n  profileText: IProfileText;\r\n  setProfileText: React.Dispatch<IProfileText>;\r\n}\r\n\r\nexport const AppRouter: React.FC<IAppRouter> = ({\r\n  isLoggedIn,\r\n  profileText,\r\n  setProfileText,\r\n}) => {\r\n  return (\r\n    <Router>\r\n      {isLoggedIn && (\r\n        <AppNavigation\r\n          displayName={profileText.displayName}\r\n          email={profileText.email}\r\n          photoUrl={profileText.photoUrl}\r\n        />\r\n      )}\r\n      {isLoggedIn ? (\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Home />\r\n          </Route>\r\n          <Route exact path=\"/profile\">\r\n            <Profile\r\n              setProfileText={setProfileText}\r\n              profileText={profileText}\r\n            />\r\n          </Route>\r\n          <Redirect from=\"*\" to=\"/\" />\r\n        </Switch>\r\n      ) : (\r\n        <Switch>\r\n          <Route exact path-=\"/\">\r\n            <Auth />\r\n          </Route>\r\n        </Switch>\r\n      )}\r\n    </Router>\r\n  );\r\n};\r\n","D:\\mystudy\\nwitter\\src\\routes\\auth.tsx",["49","50","51","52"],"import { faGithub, faGoogle } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { firebaseApp, firebaseAuth, firebaseInstance } from \"firebase.app\";\r\nimport React, { useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\ninterface IAuthForm {\r\n  email: string;\r\n  password: string;\r\n  password2: string;\r\n}\r\n\r\nexport const Auth = () => {\r\n  const {\r\n    register,\r\n    formState,\r\n    handleSubmit,\r\n    getValues,\r\n    errors,\r\n  } = useForm<IAuthForm>({\r\n    mode: \"onBlur\",\r\n  });\r\n  const [isCreating, setIsCreating] = useState<Boolean>(false);\r\n  const [authError, setAuthError] = useState<string | null>(null);\r\n\r\n  const onSubmit = async () => {\r\n    const { email, password, password2 } = getValues();\r\n    try {\r\n      if (isCreating) {\r\n        if (password === password2) {\r\n          const data = await firebaseAuth.createUserWithEmailAndPassword(\r\n            email,\r\n            password\r\n          );\r\n        } else {\r\n          setAuthError(\"Please verify your password\");\r\n        }\r\n      } else {\r\n        const data = await firebaseAuth.signInWithEmailAndPassword(\r\n          email,\r\n          password\r\n        );\r\n      }\r\n    } catch (e) {\r\n      setAuthError(e.message);\r\n    }\r\n  };\r\n\r\n  const onSocialClick = async (event: any) => {\r\n    const {\r\n      target: { name },\r\n    } = event;\r\n\r\n    try {\r\n      let provider = null;\r\n      if (name === \"google\") {\r\n        provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n      } else if (name === \"github\") {\r\n        provider = new firebaseInstance.auth.GithubAuthProvider();\r\n      }\r\n\r\n      if (provider) await firebaseAuth.signInWithPopup(provider);\r\n    } catch (error) {\r\n      setAuthError(error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"w-full flex flex-col items-center\">\r\n      <div className=\"w-full max-w-screen-sm flex flex-col items-center mt-32\">\r\n        <div className=\"w-full h-16 text-2xl italic bg-gray-700 text-white flex items-center justify-center\">\r\n          {isCreating ? \"Create Account\" : \"Log in\"}\r\n        </div>\r\n        <form\r\n          className=\"w-full  flex flex-col py-6 px-4 border border-gray-200\"\r\n          method=\"post\"\r\n          onSubmit={handleSubmit(onSubmit)}\r\n        >\r\n          <div className=\"flex flex-col items-start w-full mb-4\">\r\n            <input\r\n              className=\"border border-gray-400 py-3 px-2 text-lg w-full outline-none\"\r\n              ref={register({\r\n                required: true,\r\n                pattern: {\r\n                  value: /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/,\r\n                  message: \"Please write valid email address\",\r\n                },\r\n              })}\r\n              type=\"email\"\r\n              name=\"email\"\r\n              placeholder=\"Email\"\r\n              required\r\n            />\r\n            {errors.email && (\r\n              <span className=\"text-red-600 italic text-sm font-thin\">\r\n                {errors.email.message}\r\n              </span>\r\n            )}\r\n          </div>\r\n          <div className=\"flex flex-col items-start w-full mb-4\">\r\n            <input\r\n              className=\"border border-gray-400 py-3 px-2 text-lg w-full outline-none\"\r\n              ref={register({\r\n                required: true,\r\n\r\n                minLength: {\r\n                  value: 8,\r\n                  message: \"Password must be longer than 8 length.\",\r\n                },\r\n                maxLength: {\r\n                  value: 16,\r\n                  message: \"Password must be shorter than 16 length.\",\r\n                },\r\n              })}\r\n              type=\"password\"\r\n              name=\"password\"\r\n              placeholder=\"Password\"\r\n              required\r\n            />\r\n            {errors.password && (\r\n              <span className=\"text-red-600 italic text-sm font-thin\">\r\n                {errors.password.message}\r\n              </span>\r\n            )}\r\n          </div>\r\n          {isCreating && (\r\n            <div className=\"flex flex-col items-start w-full mb-4\">\r\n              <input\r\n                className=\"border border-gray-400 py-3 px-2 text-lg w-full outline-none\"\r\n                ref={register({\r\n                  required: true,\r\n                  minLength: {\r\n                    value: 8,\r\n                    message: \"Password must be longer than 8 length.\",\r\n                  },\r\n                  maxLength: {\r\n                    value: 16,\r\n                    message: \"Password must be shorter than 16 length.\",\r\n                  },\r\n                })}\r\n                type=\"password\"\r\n                name=\"password2\"\r\n                placeholder=\"Verify password\"\r\n                required\r\n              />\r\n              {errors.password2 && (\r\n                <span className=\"text-red-600 italic text-sm font-thin\">\r\n                  {errors.password2.message}\r\n                </span>\r\n              )}\r\n            </div>\r\n          )}\r\n          {authError && (\r\n            <div className=\"w-full text-red-600 mb-4\">\r\n              <span>{authError}</span>\r\n            </div>\r\n          )}\r\n          <button className=\"mx-auto w-1/2 text-center text-xl py-5 bg-blue-200 text-blue-400 hover:bg-blue-600 hover:text-blue-200 transition duration-200\">\r\n            {isCreating ? \"Create Account\" : \"Log in\"}\r\n          </button>\r\n        </form>\r\n        <div className=\"w-full py-4 flex justify-around\">\r\n          <button\r\n            onClick={onSocialClick}\r\n            name=\"google\"\r\n            className=\"py-4 text-center text-xl bg-red-600 text-white px-4 hover:bg-red-400 transition duration-200\"\r\n          >\r\n            <FontAwesomeIcon\r\n              className=\"mr-2 border border-white rounded-full p-1 text-2xl\"\r\n              icon={faGoogle}\r\n            />\r\n            Continue with Google\r\n          </button>\r\n          <button\r\n            onClick={onSocialClick}\r\n            name=\"github\"\r\n            className=\"py-4 text-center text-xl bg-gray-800 text-white px-4 hover:bg-gray-600 transition duration-200\"\r\n          >\r\n            <FontAwesomeIcon icon={faGithub} className=\"mr-2\" />\r\n            Continue with Github\r\n          </button>\r\n        </div>\r\n        <div className=\"text-xl\">\r\n          <p>\r\n            {isCreating\r\n              ? \"You already have account? Then, \"\r\n              : \"Don't you have any account? Then, \"}\r\n            <span\r\n              className=\" cursor-pointer text-blue-500 hover:font-bold\"\r\n              onClick={() => setIsCreating(!isCreating)}\r\n            >\r\n              {isCreating ? \"Log in\" : \"Create account.\"}\r\n            </span>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","D:\\mystudy\\nwitter\\src\\components\\Navigation.tsx",["53","54"],"import { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUserAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { firebaseAuth } from \"firebase.app\";\r\nimport React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\ninterface IProfileText {\r\n  displayName?: string | null;\r\n  email?: string | null;\r\n  photoUrl?: string | null;\r\n}\r\n\r\nexport const AppNavigation: React.FC<IProfileText> = ({\r\n  displayName,\r\n  email,\r\n  photoUrl,\r\n}) => {\r\n  return (\r\n    <nav className=\"w-full p-4 bg-blue-400 text-white text-2xl\">\r\n      <ul className=\"w-full flex justify-between\">\r\n        <li>\r\n          <Link to=\"/\">\r\n            <FontAwesomeIcon icon={faTwitter} />\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/profile\" className=\"flex items-center group\">\r\n            {photoUrl ? (\r\n              <div\r\n                className=\"w-8 h-8 rounded-full bg-cover bg-center mr-2\"\r\n                style={{ backgroundImage: `url(${photoUrl})` }}\r\n              ></div>\r\n            ) : (\r\n              <FontAwesomeIcon icon={faUserAlt} className=\"mr-2\" />\r\n            )}\r\n            <span className=\"text-sm group-hover:underline\">\r\n              {displayName}({email})\r\n            </span>\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n","D:\\mystudy\\nwitter\\src\\routes\\home.tsx",["55","56","57"],"import { Nweet } from \"components/Nweet\";\r\nimport { firebaseAuth, firebaseFS, firebaseStorage } from \"firebase.app\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\ninterface IMessageForm {\r\n  message: string;\r\n  files: File[];\r\n}\r\n\r\nexport interface INweet {\r\n  id: string;\r\n  creatorId: string;\r\n  nweet: string;\r\n  createdAt: Date;\r\n  imageUrl?: string | null;\r\n}\r\n\r\nexport const Home = () => {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    getValues,\r\n    errors,\r\n    reset,\r\n  } = useForm<IMessageForm>();\r\n  const [nweets, setNweets] = useState<INweet[]>([]);\r\n  const [imageData, setImageData] = useState<string | null>(null);\r\n\r\n  const onSubmit = async () => {\r\n    const { message, files } = getValues();\r\n\r\n    let fileName = null;\r\n\r\n    if (imageData) {\r\n      fileName = uuidv4();\r\n      const fileRef = firebaseStorage\r\n        .ref()\r\n        .child(`${firebaseAuth.currentUser?.uid}/${fileName}`);\r\n      await fileRef.putString(imageData, \"data_url\");\r\n    }\r\n\r\n    await firebaseFS.collection(\"nweets\").add({\r\n      nweet: message,\r\n      creatorId: firebaseAuth.currentUser?.uid,\r\n      createdAt: Date.now(),\r\n      imageUrl: fileName,\r\n    });\r\n\r\n    reset();\r\n    setImageData(null);\r\n  };\r\n\r\n  const onFileChange = () => {\r\n    const { files } = getValues();\r\n    const file = files[0];\r\n\r\n    const reader = new FileReader();\r\n    // @ts-ignore\r\n    reader.onloadend = (ev) => setImageData(ev.currentTarget.result);\r\n    reader.readAsDataURL(file);\r\n  };\r\n\r\n  const getNweets = async () => {\r\n    setNweets([]);\r\n    const nweetsFromFS = await firebaseFS\r\n      .collection(\"nweets\")\r\n      .orderBy(\"createdAt\", \"asc\")\r\n      .get();\r\n    nweetsFromFS.forEach((document) => {\r\n      const { nweet, createdAt, creatorId, id, imageUrl } = document.data();\r\n      setNweets((prev) => [\r\n        { nweet, createdAt, creatorId, id, imageUrl },\r\n        ...prev,\r\n      ]);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    firebaseFS\r\n      .collection(\"nweets\")\r\n      //.where(\"creatorId\", \"==\", firebaseAuth.currentUser?.uid)\r\n      .orderBy(\"createdAt\", \"asc\")\r\n      .onSnapshot((snapshot) => {\r\n        snapshot.docChanges().forEach((change) => {\r\n          if (change.type === \"added\") {\r\n            const { creatorId, nweet, createdAt, imageUrl } = change.doc.data();\r\n            setNweets((prev) => [\r\n              { id: change.doc.id, creatorId, nweet, createdAt, imageUrl },\r\n              ...prev,\r\n            ]);\r\n          }\r\n          if (change.type === \"removed\") {\r\n            setNweets((prev) =>\r\n              prev.filter((nweet) => nweet.id !== change.doc.id)\r\n            );\r\n          }\r\n          if (change.type === \"modified\") {\r\n            setNweets((prev) => {\r\n              const index = prev.findIndex((nweet) => {\r\n                return nweet.id === change.doc.id;\r\n              });\r\n              if (index > -1) {\r\n                const { nweet } = change.doc.data();\r\n                prev[index] = { ...prev[index], nweet };\r\n              }\r\n\r\n              return [...prev];\r\n            });\r\n          }\r\n        });\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"w-full h-full flex flex-col\">\r\n      <div className=\"w-full h-full max-w-screen-sm flex flex-col items-start mt-4 mb-4 \">\r\n        <div className=\"p-1 w-32 h-32 border border-gray-400 self-center mb-2 flex justify-center items-center\">\r\n          {imageData && (\r\n            <img className=\"w-full h-full\" src={imageData} alt=\"from user\" />\r\n          )}\r\n        </div>\r\n        <form\r\n          className=\"w-full h-auto flex flex-col px-2\"\r\n          onSubmit={handleSubmit(onSubmit)}\r\n        >\r\n          <div className=\"flex flex-col items-start w-full mr-2 mb-2\">\r\n            <input\r\n              className=\"border border-gray-400 py-3 px-2 text-lg w-full outline-none\"\r\n              ref={register()}\r\n              name=\"files\"\r\n              type=\"file\"\r\n              accept=\"image/*\"\r\n              onChange={onFileChange}\r\n            />\r\n          </div>\r\n          <div className=\"w-full flex\">\r\n            <div className=\"flex flex-col items-start w-full mr-2\">\r\n              <input\r\n                className=\"border border-gray-400 py-3 px-2 text-lg w-full outline-none\"\r\n                ref={register()}\r\n                name=\"message\"\r\n                type=\"text\"\r\n                placeholder=\"What's on your mind?\"\r\n              />\r\n            </div>\r\n            <button className=\"mx-auto text-center text-sm px-2 bg-blue-200 text-blue-400 hover:bg-blue-600 hover:text-blue-200 transition duration-200\">\r\n              Nweet\r\n            </button>\r\n          </div>\r\n        </form>\r\n        <div className=\"mt-4 px-2 w-full h-full overflow-y-scroll\">\r\n          {nweets?.length > 0 ? (\r\n            <div className=\"h-full\">\r\n              {nweets.map((nweet) => (\r\n                <Nweet key={nweet.id} {...nweet} />\r\n              ))}\r\n            </div>\r\n          ) : (\r\n            <div>No Message</div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","D:\\mystudy\\nwitter\\src\\routes\\profile.tsx",["58"],"import { firebaseAuth, firebaseStorage } from \"firebase.app\";\r\nimport React, { useRef, useState } from \"react\";\r\nimport { IProfileText } from \"components/App\";\r\nimport { PreviousMap } from \"postcss\";\r\n\r\ninterface IProfile {\r\n  setProfileText: React.Dispatch<IProfileText>;\r\n  profileText: IProfileText;\r\n}\r\n\r\nexport const Profile: React.FC<IProfile> = ({\r\n  setProfileText,\r\n  profileText,\r\n}) => {\r\n  const [isEditing, setIsEditing] = useState<Boolean>(false);\r\n  const [inputName, setInputName] = useState<string>(\"\");\r\n\r\n  const fileRef = useRef<HTMLInputElement>(null);\r\n  const onLogOutClick = () => firebaseAuth.signOut();\r\n  const onNameChangeClick = () => {\r\n    setIsEditing(true);\r\n    if (profileText && profileText.displayName)\r\n      setInputName(profileText?.displayName);\r\n  };\r\n  const onNameChangeDone = async () => {\r\n    if (\r\n      inputName &&\r\n      Boolean(inputName) &&\r\n      inputName !== profileText.displayName\r\n    ) {\r\n      setProfileText({\r\n        displayName: inputName,\r\n        email: profileText.email,\r\n      });\r\n      await firebaseAuth?.currentUser?.updateProfile({\r\n        displayName: inputName,\r\n        photoURL: firebaseAuth.currentUser.photoURL,\r\n      });\r\n    }\r\n    setIsEditing(false);\r\n  };\r\n\r\n  const onPhotoChange = () => {\r\n    if (fileRef.current && fileRef.current.files) {\r\n      const file: File = fileRef?.current?.files[0];\r\n      const fileReader = new FileReader();\r\n      let imageData = null;\r\n      fileReader.readAsDataURL(file);\r\n      fileReader.onloadend = async (ev) => {\r\n        imageData = ev.target?.result;\r\n        if (typeof imageData === \"string\") {\r\n          if (imageData) {\r\n            const uploadTask = await firebaseStorage\r\n              .ref()\r\n              .child(`${firebaseAuth.currentUser?.uid}/profile`)\r\n              .putString(imageData, \"data_url\");\r\n            const photoURL: string = await uploadTask.ref.getDownloadURL();\r\n            firebaseAuth.currentUser?.updateProfile({\r\n              photoURL,\r\n            });\r\n            setProfileText({ ...profileText, photoUrl: photoURL });\r\n          }\r\n        }\r\n      };\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col w-full mt-4 p-2\">\r\n      <div className=\"flex flex-col justify-center items-center w-full\">\r\n        <button\r\n          className=\"w-full py-3 bg-blue-400 text-white hover:bg-blue-600 transition duration-200 mb-4\"\r\n          onClick={onLogOutClick}\r\n        >\r\n          Logout\r\n        </button>\r\n        <div\r\n          className=\"border bg-cover bg-center w-32 h-32 rounded-full  border-gray-400\"\r\n          style={{\r\n            backgroundImage: `url(${profileText.photoUrl})`,\r\n          }}\r\n        ></div>\r\n        <input\r\n          name=\"files\"\r\n          type=\"file\"\r\n          accept=\"image/*\"\r\n          className=\"hidden\"\r\n          ref={fileRef}\r\n          onChange={onPhotoChange}\r\n        />\r\n\r\n        <button\r\n          onClick={() => fileRef.current?.click()}\r\n          className=\"mt-2 bg-blue-400 text-white hover:bg-blue-600 px-2 py-3 transition duration-200\"\r\n        >\r\n          Change Photo\r\n        </button>\r\n      </div>\r\n      <div className=\"border mt-10 flex flex-col p-4 relative items-center\">\r\n        <div className=\"absolute -top-4 py-2 px-2 bg-indigo-400 text-white rounded-lg\">\r\n          Profile\r\n        </div>\r\n        <div className=\"w-full flex flex-col items-start justify-start mt-4\">\r\n          <div className=\"w-full flex items-center py-3\">\r\n            {isEditing ? (\r\n              <>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"w-full p-2 outline-none border border-gray-200 mr-3\"\r\n                  name=\"inputName\"\r\n                  value={inputName}\r\n                  onChange={(e) => setInputName(e.target.value)}\r\n                />\r\n                <button\r\n                  onClick={onNameChangeDone}\r\n                  className=\"bg-blue-400 text-white hover:bg-blue-600 px-2 py-2\"\r\n                >\r\n                  Done\r\n                </button>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <span className=\"w-full\">\r\n                  Display Name: {profileText.displayName}\r\n                </span>\r\n                <button\r\n                  onClick={onNameChangeClick}\r\n                  className=\"bg-blue-400 text-white hover:bg-blue-600 px-2 py-2\"\r\n                >\r\n                  Change\r\n                </button>\r\n              </>\r\n            )}\r\n          </div>\r\n          <div className=\"w-full flex items-center py-3\">\r\n            <span>Email: {profileText.email}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","D:\\mystudy\\nwitter\\src\\components\\Nweet.tsx",["59","60","61"],{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":1,"column":17,"nodeType":"68","messageId":"69","endLine":1,"endColumn":25},{"ruleId":"66","severity":1,"message":"70","line":10,"column":8,"nodeType":"68","messageId":"69","endLine":10,"endColumn":16},{"ruleId":"66","severity":1,"message":"71","line":13,"column":10,"nodeType":"68","messageId":"69","endLine":13,"endColumn":22},{"ruleId":"66","severity":1,"message":"72","line":3,"column":10,"nodeType":"68","messageId":"69","endLine":3,"endColumn":21},{"ruleId":"66","severity":1,"message":"73","line":16,"column":5,"nodeType":"68","messageId":"69","endLine":16,"endColumn":14},{"ruleId":"66","severity":1,"message":"74","line":31,"column":17,"nodeType":"68","messageId":"69","endLine":31,"endColumn":21},{"ruleId":"66","severity":1,"message":"74","line":39,"column":15,"nodeType":"68","messageId":"69","endLine":39,"endColumn":19},{"ruleId":"66","severity":1,"message":"71","line":4,"column":10,"nodeType":"68","messageId":"69","endLine":4,"endColumn":22},{"ruleId":"66","severity":1,"message":"67","line":5,"column":17,"nodeType":"68","messageId":"69","endLine":5,"endColumn":25},{"ruleId":"66","severity":1,"message":"75","line":25,"column":5,"nodeType":"68","messageId":"69","endLine":25,"endColumn":11},{"ruleId":"66","severity":1,"message":"76","line":32,"column":22,"nodeType":"68","messageId":"69","endLine":32,"endColumn":27},{"ruleId":"66","severity":1,"message":"77","line":65,"column":9,"nodeType":"68","messageId":"69","endLine":65,"endColumn":18},{"ruleId":"66","severity":1,"message":"78","line":4,"column":10,"nodeType":"68","messageId":"69","endLine":4,"endColumn":21},{"ruleId":"66","severity":1,"message":"79","line":22,"column":32,"nodeType":"68","messageId":"69","endLine":22,"endColumn":40},{"ruleId":"66","severity":1,"message":"80","line":22,"column":42,"nodeType":"68","messageId":"69","endLine":22,"endColumn":47},{"ruleId":"81","severity":1,"message":"82","line":42,"column":6,"nodeType":"83","endLine":42,"endColumn":8,"suggestions":"84"},"no-native-reassign",["85"],"no-negated-in-lhs",["86"],"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'firebase' is defined but never used.","'firebaseAuth' is defined but never used.","'firebaseApp' is defined but never used.","'formState' is assigned a value but never used.","'data' is assigned a value but never used.","'errors' is assigned a value but never used.","'files' is assigned a value but never used.","'getNweets' is assigned a value but never used.","'PreviousMap' is defined but never used.","'setValue' is assigned a value but never used.","'watch' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getImageUrl'. Either include it or remove the dependency array.","ArrayExpression",["87"],"no-global-assign","no-unsafe-negation",{"desc":"88","fix":"89"},"Update the dependencies array to be: [getImageUrl]",{"range":"90","text":"91"},[1172,1174],"[getImageUrl]"]